name: Build MkDocs site and PDFs

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLANTUML_JAR: tools/plantuml.jar
      PLANTUML_OUTPUT_FORMAT: svg
      PUPPETEER_NO_SANDBOX: true
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install system dependencies (Graphviz + Puppeteer deps)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            graphviz \
            libasound2 \
            libatk1.0-0 \
            libc6 \
            libcairo2 \
            libcups2 \
            libdbus-1-3 \
            libexpat1 \
            libfontconfig1 \
            libglib2.0-0 \
            libgdk-pixbuf2.0-0 \
            libnspr4 \
            libnss3 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libstdc++6 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            fonts-liberation \
            libappindicator3-1 \
            xdg-utils \
            wget

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Mermaid CLI (global)
        run: |
          npm install -g @mermaid-js/mermaid-cli@10.4.0
          echo "âœ… Mermaid CLI installed"

      - name: Verify mmdc
        run: |
          which mmdc
          mmdc --version

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download PlantUML jar
        run: bash scripts/get_plantuml.sh

      - name: Cache PlantUML renders
        uses: actions/cache@v4
        with:
          path: .plantuml-cache
          key: ${{ runner.os }}-plantuml-${{ hashFiles('**/*.puml', '**/*.plantuml') }}
          restore-keys: |
            ${{ runner.os }}-plantuml-

      - name: Build MkDocs Site (HTML)
        run: mkdocs build --clean

      - name: Build PDFs
        env:
          ENABLE_PDF_EXPORT: "1"
        run: |
          echo "Running PDF build with mkdocs_pdf_build.py"
          python3 scripts/mkdocs_pdf_build.py || exit 1

      - name: Upload PDF artefacts
        uses: actions/upload-artifact@v4
        with:
          name: pdfs
          path: site/pdf/*.pdf
          if-no-files-found: warn

      - name: Upload site
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
